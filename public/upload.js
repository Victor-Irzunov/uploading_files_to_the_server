function bytesToSize_f_1(bytes) {                                     //–∫–æ–Ω–≤–µ–∫—Ç–æ—Ä kB

  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']
  if (!bytes) {
    return '0 Byte'
  }
  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))
  return Math.round(bytes / Math.pow(1024, i)) + ' ' + sizes[i]
}


//—Ñ-—Ü–∏—è help
const element_13 = (tag, classes = [], content) => {
  const node = document.createElement(tag)

  if (classes.length) {
    node.classList.add(...classes)
  }
  if (content) {
    node.textContent = content
  }
  return node
}




function noop() { }

let files

function test() {
  console.log('test  files= ', files)
}

//++ —Å—Ç–∞—Ä—Ç —Ñ-—Ü–∏–∏   => upload


//? export 

function upload(selector, options = {}) {
  files = []
  console.log("üöÄ  –∑–∞–ø—É—â–µ–Ω–∞ —Ñ-—Ü–∏—è upload  let files= ", files)



  //---—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
  const onUpload = options.onUpload ?? noop             //??    ?? –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ undefined –∏ null.–£–∫–∞–∑–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Ç–æ–≥–æ, —á—Ç–æ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π 0, false, –∏ '' –Ω–µ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∑–Ω–∞—á–µ–Ω–∏—è, –ø—Ä–∏–º–µ–Ω—è–µ–º–æ–≥–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
  //-------------



  const input = document.querySelector(selector)
  const preview = element_13('div', ['preview'])           //preview - c –∞–Ω–≥–ª. –ø—Ä–æ—Å–º–æ—Ç—Ä



  // const open = document.createElement('button')
  // open.classList.add('btn')
  // open.textContent = '–û–¢–∫—Ä—ã—Ç—å'
  const open = element_13('button', ['btn'], '–û—Ç–∫—Ä—ã—Ç—å')


  const upload = element_13('button', ['btn', 'primary'], '–ó–∞–≥—Ä—É–∑–∏—Ç—å')
  upload.style.display = 'none'

  if (options.multi) {
    input.setAttribute('multiple', true)           //–¥–æ–±–∞–≤–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç  //multiple–ê—Ç—Ä–∏–±—É—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–æ–≥–∏—á–µ—Å–∫–∏–º –∞—Ç—Ä–∏–±—É—Ç–æ–º.–ï—Å–ª–∏ –æ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –æ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤–≤–æ–¥–∏—Ç—å / –≤—ã–±–∏—Ä–∞—Ç—å –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.
  }

  if (options.accept && Array.isArray(options.accept)) {                  //Array.isArray() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –æ–±—ä–µ–∫—Ç —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º 
    input.setAttribute('accept', options.accept.join(','))                  //–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –∞—Ç—Ä–∏–±—É—Ç –∏–ª–∏ –∏–∑–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ —É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞.
  }


  input.insertAdjacentElement('afterend', preview)                      //–≤—Å—Ç–∞–≤–∏—Ç—å —ç–ª–µ–º –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
  input.insertAdjacentElement('afterend', upload)
  // input.insertAdjacentElement('beforebegin', open)

  document.querySelector('form[method="POST"]').insertAdjacentElement('beforebegin', open)


  const triggerInput = () => input.click()



  const changeHandler = event => {              //*changeHandler -c –∞–Ω–≥–ª. –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if (!event.target.files.length) {
      return
    }

    files = Array.from(event.target.files)                        //Array.from() —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä Array –∏–∑ –º–∞—Å—Å–∏–≤–æ–ø–æ–¥–æ–±–Ω–æ–≥–æ –∏–ª–∏ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    console.log("üöÄ —Ñ-—Ü–∏—è changeHandler files= ", files)
    preview.innerHTML = ''
    upload.style.display = 'inline'

    files.forEach(file => {
      if (!file.type.match('image')) {                           //match () –∏—â–µ—Ç –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ Array.
        return
      }

      const reader = new FileReader()               //FileReader –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ —á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤ (–∏–ª–∏ –±—É—Ñ–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö), —Ö—Ä–∞–Ω—è—â–∏–µ—Å—è –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      reader.onload = ev => {                       //FileReader.onload –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–±—ã—Ç–∏—è load. –≠—Ç–æ —Å–æ–±—ã—Ç–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∫–∞–∂–¥–æ–º —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ —á—Ç–µ–Ω–∏—è.
        const src = ev.target.result
        //insertAdjacentHTML –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—Å—Ç–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É HTML –∫–æ–¥–∞ –≤ –ª—é–±–æ–µ –º–µ—Å—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.  //afterbegin - –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞
        preview.insertAdjacentHTML('afterbegin', `
          <div class="preview-image">
            <div class="preview-remove" data-name="${file.name}">&times;</div>
            <img src="${src}" alt="${file.name}" />
            <div class="preview-info">
              <span>${file.name}</span>
              ${bytesToSize_f_1(file.size)}
            </div>
          </div>
        `)
      }
      reader.readAsDataURL(file)            //readAsDataURL —Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞–∫ base64 —Å—Ç—Ä–æ–∫—É
    })
  }



  //*—É–¥–∞–ª–µ–Ω–∏–µ
  const removeHandler = event => {
    if (!event.target.dataset.name) {
      return
    }
    const { name } = event.target.dataset                            //—É–¥–∞–ª—è–µ–º –∏–∑ –ø–∞–º—è—Ç–∏
    files = files.filter(file => file.name !== name)
    if (!files.length) {
      upload.style.display = 'none'
    }
    const block = preview                                              //—É–¥–∞–ª—è–µ–º –∏–∑ –±–ª–æ–∫–∞
      .querySelector(`[data-name="${name}"]`)
      .closest('.preview-image')                                        //.closest - –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è
    block.classList.add('removing')
    setTimeout(() => block.remove(), 300)
  }

  //** –ø–æ–ª–æ—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
  const clearPreview = el => {
    el.style.bottom = '4px'
    el.innerHTML = '<div class="preview-info-progress"></div>'
  }

  const uploadHandler = () => {                                      //uploadHandler - –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ c –∞–Ω–≥–ª.
    preview.querySelectorAll('.preview-remove').forEach(e => e.remove())         //–∫—Ä–µ—Å—Ç–∏–∫–∏ —É–¥–∞–ª—è–µ–º 
    const previewInfo = preview.querySelectorAll('.preview-info')
    previewInfo.forEach(clearPreview)

    onUpload(files, previewInfo)  //

    console.log('onUpload(files= ', files)
    console.log("üöÄ DIV: ", previewInfo)

  }

  open.addEventListener('click', triggerInput)
  input.addEventListener('change', changeHandler)                  //change - –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞.

  preview.addEventListener('click', removeHandler) //* —É–¥–∞–ª–∏—Ç—å

  upload.addEventListener('click', uploadHandler) //* –∑–∞–≥—Ä—É–∑–∏—Ç—å
}
// //++ –∫–æ–Ω–µ—Ü —Ñ-—Ü–∏–∏ upload




// //--–∫–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å
upload('#file', {
  multi: true,                                        //–±—É–¥—É —Å—á–∏—Ç—ã–≤–∞—Ç—å –∫–ª—é—á –∏ –µ—Å–ª–∏ –∏—Å—Ç–∏–Ω–∞ —Ç–æ –∑–∞–≥—Ä—É–∂ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤
  accept: ['.png', '.jpg', '.jpeg', '.gif'],

  onUpload(files, blocks) {
    let xhr = new XMLHttpRequest()

    files.forEach((file, index) => {

      //--–ø—Ä–æ–≥—Ä–µ—Å—Å
      xhr.upload.onprogress = function (event) {                       //–ø—Ä–æ—Å–ª—É—à–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        console.log(`%c –∑–∞–≥—Ä—É–∑–∫–∞: ${event.loaded}`, 'color: #000000; background: #808000; padding: 5px; font-size: 15px; margin-top: 5px; border-radius: 2px;')

        const percentage = ((event.loaded / event.total) * 100).toFixed(0) + '%'

        const block = blocks[index].querySelector('.preview-info-progress')
        block.textContent = percentage
        block.style.width = percentage
      }


      // xhr.onloadend = function () {
      //   if (xhr.status == 200) {
      //     console.log("–£—Å–ø–µ—Ö");
      //   } else {
      //     console.log("–û—à–∏–±–∫–∞: " + this.status);
      //   }
      // };



      xhr.open("POST", "/images", true);                              //"/images" –∫—É–¥–∞ –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–∞–π–ª



      xhr.setRequestHeader('Content-Type', 'application/octet-stream');


      //++–í—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
      xhr.onreadystatechange = function () {
        console.log(' = = = = =  = = == ')
        event = null
        if (xhr.readyState == 4) {                  //*
          if (xhr.status == 200) {
            console.log('–∫–ª–∞—Å—Å')
          }
          else {
            console.log(xhr.readyState)
            console.log('–í–∏—Ç—è –æ—à–∏–±–∫–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞')
          }
        }
      }


      // var formData = new FormData();
      // formData.append("images", file);


      console.log('xhr.send(file) :', file)
      xhr.send(file)
    })
  }
})



//----------------------------------------------------------------------


